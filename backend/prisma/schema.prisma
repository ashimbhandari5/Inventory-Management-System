// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Role {
  id    Int    @id() @default(autoincrement())
  name  String @unique()
  users User[]

  @@map("roles")
}

enum OrganizationType {
  retail
  wholesale
}

model Organization {
  id                 Int                @id @default(autoincrement())
  name               String             @unique
  type               OrganizationType   @default(retail)
  address            String?
  phone              String?            @db.VarChar(15)
  created_at         DateTime           @default(now())
  updated_at         DateTime           @default(now())
  users              User[]
  item_organizations ItemOrganization[]

  @@map("organizations")
}

model User {
  id              Int      @id @default(autoincrement())
  role_id         Int
  organization_id Int
  name            String
  email           String   @unique
  mobile          String   @unique @db.VarChar(15)
  password        String
  created_at      DateTime @default(now())
  updated_at      DateTime @updatedAt

  role         Role         @relation(fields: [role_id], references: [id])
  organization Organization @relation(fields: [organization_id], references: [id])

  @@map("users")
}

enum DiscountType {
  rate
  amount
}

model Item {
  id                 Int                @id @default(autoincrement())
  name               String             @unique
  description        String?            @db.Text()
  quantity           Int?               @default(0)
  price              Float              @default(0)
  discount           Float              @default(0)
  discount_type      DiscountType       @default(rate)
  tax                Float              @default(0)
  created_at         DateTime           @default(now())
  updated_at         DateTime           @default(now())
  item_organizations ItemOrganization[]

  @@map("items")
}

model ItemOrganization {
  id Int @id() @default(autoincrement())

  item_id         Int
  organization_id Int

  item          Item         @relation(fields: [item_id], references: [id], onDelete: Cascade)
  organizations Organization @relation(fields: [organization_id], references: [id], onDelete: Cascade)

  @@map("item_organizations")
}
